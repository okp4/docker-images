name: Publish

on:
  push:
    branches: [main]

jobs:
  prepare:
    name: Create build matrix
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.matrix.outputs.config }}
      any-changed: ${{ steps.changed-dockerfiles.outputs.any_changed }}
      repository_owner: ${{ steps.environment.outputs.repository_owner }}
      date_stamp: ${{ steps.environment.outputs.date_stamp }}
      date: ${{ steps.environment.outputs.date }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Find changed dockerfiles
        id: changed-dockerfiles
        uses: tj-actions/changed-files@v23
        with:
          separator: ","
          files: |
            **/Dockerfile

      - name: Setup environment
        id: environment
        run: |
          echo "::set-output name=repository_owner::$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=date_stamp::$(date +'%Y%m%d')"
          echo "::set-output name=date::$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

      - name: Setup matrix (for changed dockerfiles)
        id: matrix
        run: |
          CONFIG=""
          ALL_MODIFIED_FILES=${{ steps.changed-dockerfiles.outputs.all_modified_files }}
          IFS=',' read -r -a DOCKERFILES <<< "$ALL_MODIFIED_FILES"
          for DOCKERFILE in "${DOCKERFILES[@]}"; do
              APATH=$(dirname ${DOCKERFILE})
              VERSION=$(basename ${APATH})
              NAME=$(basename $(dirname $APATH))
              CONFIG="${CONFIG:+${CONFIG}, }{\"path\": \"${APATH}\", \"version\": \"${VERSION}\", \"name\": \"${NAME}\"}"
          done
          echo "::set-output name=config::[${CONFIG}]"

  publish-docker-images:
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    needs: prepare
    strategy:
      matrix:
        context: ${{ fromJson(needs.prepare.outputs.matrix) }}
      fail-fast: false
    if: needs.prepare.outputs.any-changed == 'true'
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: okp4
          password: ${{ secrets.DOCKER_HUB_REGISTRY_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.context.path }}
          push: true
          tags: |
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.context.name }}:${{ matrix.context.version }}-${{ needs.prepare.outputs.date_stamp }}"
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.context.name }}:${{ matrix.context.version }}"
            "${{ needs.prepare.outputs.repository_owner }}/${{ matrix.context.name }}:${{ matrix.context.version }}-${{ needs.prepare.outputs.date_stamp }}"
            "${{ needs.prepare.outputs.repository_owner }}/${{ matrix.context.name }}:${{ matrix.context.version }}"
          labels: |
            org.opencontainers.image.created=${{ needs.prepare.outputs.date_stamp }}
            org.opencontainers.image.name=${{ matrix.context.name }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ matrix.context.version }}
            org.opencontainers.image.vendor=${{ needs.prepare.outputs.repository_owner }}
            org.opencontainers.image.url=https://github.com/${{ github.repository }}/tree/main/dockerfiles/${{ matrix.context.name }}/${{ matrix.context.version }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}/tree/main/dockerfiles/${{ matrix.context.name }}/${{ matrix.context.version }}
